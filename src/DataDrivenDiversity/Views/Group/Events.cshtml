@model EventsViewModel
@{
ViewData["Title"] = $"{Model.GroupUrlName} Events ({@Model.Events.Count()})";
}

<div class="card-body">
    <canvas id="groupEventsChart"></canvas>

    <script src="~/js/chart.js"></script>
    <script>
        var rsvpLabels = [];
        var rsvpData = [];
        var rsvpBgColor = [];
        var rsvpBorderColor = [];

        @foreach(var ev in Model.Events) {
            @: rsvpLabels.push("@ev.Name");
            @: rsvpData.push("@ev.YesRsvpCount");
            @: rsvpBgColor.push("rgba(255, 99, 132, 0.5)");
            @: rsvpBorderColor.push("rgba(255,99,132,1)");
        }

        var ctx = document.getElementById("groupEventsChart");

        var groupEventsChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: rsvpLabels,
                datasets: [{
                    label: 'RSVPs',
                    data: rsvpData,
                    backgroundColor: rsvpBgColor,
                    borderColor: rsvpBorderColor,
                    borderWidth: 1
                }],
            },
            options: {
                scales: {
                    xAxes: [{
                        ticks: {
                            display: false
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    </script>
</div>

<div class="card-body">
    <h3>List of events</h3>
    <ul>
        @foreach (var ev in Model.Events)
        {

        <li> <a asp-controller="Group" asp-action="Event" asp-route-urlname="@Model.GroupUrlName"
                asp-route-id="@ev.Id">@ev.Name</a> <span style="color: #ccc">@ev.Time.ToLocalTime()</span></li>
        
        }
    </ul>
</div>