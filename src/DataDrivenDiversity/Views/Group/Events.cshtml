@model EventsViewModel

@{
    ViewData["Title"] = "Event";
}

<h1 class="title">Event</h1>

<canvas id="groupEventsChart"></canvas>

<script src="~/js/chart.js"></script>
<script>
    var rsvpLabels = [];
    var rsvpData = [];
    var rsvpBgColor = [];
    var rsvpBorderColor = [];

    @foreach (var ev in Model.Events)
    {
        @:rsvpLabels.push("@ev.Name");
        @:rsvpData.push("@ev.YesRsvpCount");
        @:rsvpBgColor.push("rgba(255, 99, 132, 0.5)");
        @:rsvpBorderColor.push("rgba(255,99,132,1)");
    }

    var ctx = document.getElementById("groupEventsChart");

    var groupEventsChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: rsvpLabels,
            datasets: [{
                label: 'RSVPs',
                data: rsvpData,
                backgroundColor: rsvpBgColor,
                borderColor: rsvpBorderColor,
                borderWidth: 1
            }],
        },
        options: {
            scales: {
                xAxes: [{
                    ticks: {
                        display: false
                    }
                }],
                yAxes: [{
                    ticks: {
                        beginAtZero:true
                    }
                }]
            }
        }
    });
</script>

<p>Total: @Model.Events.Count()</p>

<ul>
    @foreach (var ev in Model.Events)
    {
        <li>@ev.Name <span style="color: #ccc">(Date @ev.Time)</span> <span style="color: #ccc">(RSVP @ev.YesRsvpCount)</span></li>
        <!-- @ev.Description -->
    }
</ul>

